
// This file has been generated by the GUI designer. Do not modify.
namespace Moscrif.IDE.Settings
{
	public partial class GlobalEditorWidget
	{
		private global::Gtk.Table table1;
		private global::Gtk.FontButton fontbutton1;
		private global::Gtk.CheckButton chbAgressivelyTriggerCL;
		private global::Gtk.CheckButton chbEnableAnimations;
		private global::Gtk.CheckButton chbShowEolMarker;
		private global::Gtk.CheckButton chbShowLineNumber;
		private global::Gtk.CheckButton chbShowRuler;
		private global::Gtk.CheckButton chbShowSpaces;
		private global::Gtk.CheckButton chbShowTabs;
		private global::Gtk.CheckButton chbTabsToSpace;
		private global::Gtk.Label label1;
		private global::Gtk.Label label2;
		private global::Gtk.Label label3;
		private global::Gtk.SpinButton spRulerColumn;
		private global::Gtk.SpinButton spTabSpace;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Moscrif.IDE.Settings.GlobalEditorWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "Moscrif.IDE.Settings.GlobalEditorWidget";
			// Container child Moscrif.IDE.Settings.GlobalEditorWidget.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(9)), ((uint)(3)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.fontbutton1 = new global::Gtk.FontButton ();
			this.fontbutton1.CanFocus = true;
			this.fontbutton1.Name = "fontbutton1";
			this.fontbutton1.FontName = "Monospace 10";
			this.fontbutton1.ShowStyle = false;
			this.fontbutton1.UseFont = true;
			this.fontbutton1.UseSize = true;
			this.table1.Add (this.fontbutton1);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.fontbutton1]));
			w1.TopAttach = ((uint)(1));
			w1.BottomAttach = ((uint)(2));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chbAgressivelyTriggerCL = new global::Gtk.CheckButton ();
			this.chbAgressivelyTriggerCL.CanFocus = true;
			this.chbAgressivelyTriggerCL.Name = "chbAgressivelyTriggerCL";
			this.chbAgressivelyTriggerCL.Label = global::Mono.Unix.Catalog.GetString ("Aggressively trigger code completion list");
			this.chbAgressivelyTriggerCL.DrawIndicator = true;
			this.chbAgressivelyTriggerCL.UseUnderline = true;
			this.table1.Add (this.chbAgressivelyTriggerCL);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.chbAgressivelyTriggerCL]));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chbEnableAnimations = new global::Gtk.CheckButton ();
			this.chbEnableAnimations.CanFocus = true;
			this.chbEnableAnimations.Name = "chbEnableAnimations";
			this.chbEnableAnimations.Label = global::Mono.Unix.Catalog.GetString ("Enable Animations");
			this.chbEnableAnimations.DrawIndicator = true;
			this.chbEnableAnimations.UseUnderline = true;
			this.table1.Add (this.chbEnableAnimations);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.chbEnableAnimations]));
			w3.TopAttach = ((uint)(5));
			w3.BottomAttach = ((uint)(6));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chbShowEolMarker = new global::Gtk.CheckButton ();
			this.chbShowEolMarker.CanFocus = true;
			this.chbShowEolMarker.Name = "chbShowEolMarker";
			this.chbShowEolMarker.Label = global::Mono.Unix.Catalog.GetString ("Show EOL Marker");
			this.chbShowEolMarker.DrawIndicator = true;
			this.chbShowEolMarker.UseUnderline = true;
			this.table1.Add (this.chbShowEolMarker);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.chbShowEolMarker]));
			w4.TopAttach = ((uint)(3));
			w4.BottomAttach = ((uint)(4));
			w4.LeftAttach = ((uint)(2));
			w4.RightAttach = ((uint)(3));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chbShowLineNumber = new global::Gtk.CheckButton ();
			this.chbShowLineNumber.CanFocus = true;
			this.chbShowLineNumber.Name = "chbShowLineNumber";
			this.chbShowLineNumber.Label = global::Mono.Unix.Catalog.GetString ("Show Line Number");
			this.chbShowLineNumber.DrawIndicator = true;
			this.chbShowLineNumber.UseUnderline = true;
			this.table1.Add (this.chbShowLineNumber);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.chbShowLineNumber]));
			w5.TopAttach = ((uint)(4));
			w5.BottomAttach = ((uint)(5));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chbShowRuler = new global::Gtk.CheckButton ();
			this.chbShowRuler.CanFocus = true;
			this.chbShowRuler.Name = "chbShowRuler";
			this.chbShowRuler.Label = global::Mono.Unix.Catalog.GetString ("Show Ruler");
			this.chbShowRuler.DrawIndicator = true;
			this.chbShowRuler.UseUnderline = true;
			this.table1.Add (this.chbShowRuler);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.chbShowRuler]));
			w6.TopAttach = ((uint)(6));
			w6.BottomAttach = ((uint)(7));
			w6.LeftAttach = ((uint)(1));
			w6.RightAttach = ((uint)(2));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chbShowSpaces = new global::Gtk.CheckButton ();
			this.chbShowSpaces.CanFocus = true;
			this.chbShowSpaces.Name = "chbShowSpaces";
			this.chbShowSpaces.Label = global::Mono.Unix.Catalog.GetString ("Show Spaces");
			this.chbShowSpaces.DrawIndicator = true;
			this.chbShowSpaces.UseUnderline = true;
			this.table1.Add (this.chbShowSpaces);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.chbShowSpaces]));
			w7.TopAttach = ((uint)(5));
			w7.BottomAttach = ((uint)(6));
			w7.LeftAttach = ((uint)(2));
			w7.RightAttach = ((uint)(3));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chbShowTabs = new global::Gtk.CheckButton ();
			this.chbShowTabs.CanFocus = true;
			this.chbShowTabs.Name = "chbShowTabs";
			this.chbShowTabs.Label = global::Mono.Unix.Catalog.GetString ("Show Tabs");
			this.chbShowTabs.DrawIndicator = true;
			this.chbShowTabs.UseUnderline = true;
			this.table1.Add (this.chbShowTabs);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.chbShowTabs]));
			w8.TopAttach = ((uint)(4));
			w8.BottomAttach = ((uint)(5));
			w8.LeftAttach = ((uint)(2));
			w8.RightAttach = ((uint)(3));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.chbTabsToSpace = new global::Gtk.CheckButton ();
			this.chbTabsToSpace.CanFocus = true;
			this.chbTabsToSpace.Name = "chbTabsToSpace";
			this.chbTabsToSpace.Label = global::Mono.Unix.Catalog.GetString ("Convert tabs to spaces");
			this.chbTabsToSpace.DrawIndicator = true;
			this.chbTabsToSpace.UseUnderline = true;
			this.table1.Add (this.chbTabsToSpace);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table1 [this.chbTabsToSpace]));
			w9.TopAttach = ((uint)(3));
			w9.BottomAttach = ((uint)(4));
			w9.LeftAttach = ((uint)(1));
			w9.RightAttach = ((uint)(2));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.Xalign = 1F;
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Font :");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w10.TopAttach = ((uint)(1));
			w10.BottomAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.Xalign = 1F;
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Tab Size :");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w11.TopAttach = ((uint)(2));
			w11.BottomAttach = ((uint)(3));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.Xalign = 1F;
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("Ruler column");
			this.table1.Add (this.label3);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1 [this.label3]));
			w12.TopAttach = ((uint)(7));
			w12.BottomAttach = ((uint)(8));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.spRulerColumn = new global::Gtk.SpinButton (0D, 100D, 1D);
			this.spRulerColumn.CanFocus = true;
			this.spRulerColumn.Name = "spRulerColumn";
			this.spRulerColumn.Adjustment.PageIncrement = 1D;
			this.spRulerColumn.ClimbRate = 1D;
			this.spRulerColumn.Numeric = true;
			this.table1.Add (this.spRulerColumn);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table1 [this.spRulerColumn]));
			w13.TopAttach = ((uint)(7));
			w13.BottomAttach = ((uint)(8));
			w13.LeftAttach = ((uint)(1));
			w13.RightAttach = ((uint)(2));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.spTabSpace = new global::Gtk.SpinButton (0D, 20D, 1D);
			this.spTabSpace.CanFocus = true;
			this.spTabSpace.Name = "spTabSpace";
			this.spTabSpace.Adjustment.PageIncrement = 1D;
			this.spTabSpace.ClimbRate = 1D;
			this.spTabSpace.Numeric = true;
			this.table1.Add (this.spTabSpace);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table1 [this.spTabSpace]));
			w14.TopAttach = ((uint)(2));
			w14.BottomAttach = ((uint)(3));
			w14.LeftAttach = ((uint)(1));
			w14.RightAttach = ((uint)(2));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
